2025-08-01 09:19:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        d 
    FROM
        Diary d 
    WHERE
        d.user.bifId = :userId 
        AND d.createdAt BETWEEN :startDate AND :endDate 
        AND d.isDeleted = false 
    ORDER BY
        d.createdAt DESC */ select
            d1_0.diary_id,
            d1_0.content,
            d1_0.created_at,
            d1_0.selected_emotion,
            d1_0.is_deleted,
            d1_0.updated_at,
            d1_0.bif_id 
        from
            emotion_diary d1_0 
        where
            d1_0.bif_id=? 
            and d1_0.created_at between ? and ? 
            and d1_0.is_deleted=false 
        order by
            d1_0.created_at desc
2025-08-01 09:20:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        d1_0.diary_id,
        d1_0.content,
        d1_0.created_at,
        d1_0.selected_emotion,
        d1_0.is_deleted,
        d1_0.updated_at,
        d1_0.bif_id 
    from
        emotion_diary d1_0 
    where
        d1_0.diary_id=?
2025-08-01 09:20:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.sage.bif.diary.entity.Diary */update emotion_diary 
    set
        content=?,
        created_at=?,
        selected_emotion=?,
        is_deleted=?,
        updated_at=?,
        bif_id=? 
    where
        diary_id=?
2025-08-01 09:24:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.bif_id,
        b1_0.connection_code,
        b1_0.created_at,
        b1_0.nickname,
        b1_0.social_id,
        b1_0.updated_at 
    from
        bif b1_0 
    where
        b1_0.bif_id=?
2025-08-01 09:24:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.sage.bif.diary.entity.Diary */insert 
    into
        emotion_diary (content, created_at, selected_emotion, is_deleted, updated_at, bif_id, diary_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-01 09:25:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.bif_id,
        b1_0.connection_code,
        b1_0.created_at,
        b1_0.nickname,
        b1_0.social_id,
        b1_0.updated_at 
    from
        bif b1_0 
    where
        b1_0.bif_id=?
2025-08-01 09:25:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        com.sage.bif.diary.entity.Diary */insert 
    into
        emotion_diary (content, created_at, selected_emotion, is_deleted, updated_at, bif_id, diary_id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-01 10:45:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        d1_0.diary_id,
        d1_0.content,
        d1_0.created_at,
        d1_0.selected_emotion,
        d1_0.is_deleted,
        d1_0.updated_at,
        d1_0.bif_id 
    from
        emotion_diary d1_0 
    where
        d1_0.diary_id=? 
        and (
            d1_0.is_deleted = false
        )
2025-08-01 10:45:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* update
        for com.sage.bif.diary.entity.Diary */update emotion_diary 
    set
        content=?,
        created_at=?,
        selected_emotion=?,
        is_deleted=?,
        updated_at=?,
        bif_id=? 
    where
        diary_id=?
2025-08-01 16:17:12 [restartedMain] DEBUG org.hibernate.SQL - 
    create table emotion_feedback (
        feedback_id bigint generated by default as identity,
        content TEXT not null,
        created_at TIMESTAMP not null,
        diary_id bigint not null,
        primary key (feedback_id)
    )
2025-08-01 16:17:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists emotion_feedback 
       drop constraint if exists UK1chy2fp9xccx63ftfvi5n7ndq
2025-08-01 16:17:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists emotion_feedback 
       add constraint UK1chy2fp9xccx63ftfvi5n7ndq unique (diary_id)
2025-08-01 16:17:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists emotion_feedback 
       add constraint FKfowud2pg5qeyhgv0bptbteadm 
       foreign key (diary_id) 
       references emotion_diary
2025-08-01 16:48:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.bif_id,
        b1_0.connection_code,
        b1_0.created_at,
        b1_0.nickname,
        b1_0.social_id,
        b1_0.updated_at 
    from
        bif b1_0 
    where
        b1_0.bif_id=?
2025-08-01 16:48:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(d) > 0 
    FROM
        Diary d 
    WHERE
        d.user.bifId = :userId 
        AND DATE(d.createdAt) = DATE(:date) 
        AND d.isDeleted = false */ select
            count(d1_0.diary_id)>0 
        from
            emotion_diary d1_0 
        where
            (
                d1_0.isDeleted = false
            ) 
            and d1_0.bif_id=? 
            and date(d1_0.created_at)=date(?) 
            and d1_0.is_deleted=false
